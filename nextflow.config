//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.

params {
    help = false
    version = false
    analyse_unclassified = false

    // input/output options
    out_dir = "output"
    fastq = null
    sample = null
    sample_sheet = null

    // advanced options
    align_threads = 4
    mpileup_threads = 4
    reference = null
    amplicons_bed = null
    variant_db = null
    genbank = null
    report_config = null
    maf = 0.1
    strand_bias = 1000
    minimum_read_support = 5
    downsample = null
    ntc_threshold = "20,3"
    sample_threshold = "-20,8"
    positive_threshold = "-20,2"

    //other
    disable_ping = false
    aws_image_prefix = null
    aws_queue = null

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        example_cmd = [
            "--fastq 'wf-tb-amr-demo/fastq'",
            "--sample_sheet 'wf-tb-amr-demo/sample_sheet.csv'"
        ]
        agent = null
        container_sha = "sha837f62ff13f7f65a6d58f4d0aff6a9f86dda6fb7"
        common_sha = "shad399cf22079b5b153920ac39ee40095a677933f1"
    }
}


manifest {
    name            = 'epi2me-labs/wf-tb-amr'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-tb-amr'
    description     = 'Mycobacterium tuberculosis workflow for multiplexed Nanopore sequencing data.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.0.17'
}


epi2melabs {
    tags = 'amplicon,drug resistance,amr'
    icon = 'faBacterium'
}

env {
	PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}

process {
    withLabel:microbial { 
        container = "ontresearch/wf-tb-amr:${params.wf.container_sha}" 
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}

profiles {

    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:microbial {
                container = "${params.aws_image_prefix}-wf-tb-amr:${params.wf.container_sha}"
            }
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}
