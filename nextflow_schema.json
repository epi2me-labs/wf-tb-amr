{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-tb-amr",
    "description": "TB Genotyping for Antomicrobial Resistance Detection.",
    "url": "https://github.com/epi2me-labs/wf-tb-amr",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all user-facing files."
                },
                "fastq": {
                    "type": "string",
                    "format": "path",
                    "description": "A fastq file or directory containing fastq input files or directories of input files.",
                    "help_text": "If directories named \\\"barcode*\\\" are found under the `--fastq` directory the data is assumed to be multiplex and each barcode directory will be processed independently. If `.fastq(.gz)` files are found under the `--fastq` directory the sample is assumed to not be multiplexed. In this second case `--samples` should be a simple name rather than a CSV file."
                },
                "sample": {
                    "type": "string",
                    "description": "A sample name for non-multiplexed data. Permissible if passing a file or directory of .fastq(.gz)."
                },
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "CSV file with columns named `barcode`, `sample_name` and `type`. Permissible if passing a directory containing barcodeXX sub-directories."
                },
                "sanitize_fastq": {
                    "type": "boolean",
                    "description": "Use additional heuristics to identify barcodes from file paths.",
                    "help_text": "Enabling this option will group together files into samples by the presence of strings of the form `barcodeXXX` present in filenames, rather than simply files grouped into directories (as output by MinKNOW and the Guppy basecaller)."
                },
                "maf": {
                    "type": "number",
                    "description": "Minimum mutant allele frequencey to consider.",
                    "default": 0.1
                },
                "noncanonical": {
                    "type": "boolean",
                    "description": "Report confident noncanonical variants that overlap variants of interest.",
                    "default": false
                },
                "downsample": {
                    "type": "integer",
                    "description": "Number of reads to downsample to in each direction, leave null for no downsampling."
                },
                "minimum_read_support": {
                    "type": "integer",
                    "description": "The minimum number of reads to consider for a variant call on each strand.",
                    "default": 5
                },
                "simplified_bed": {
                    "type": "string",
                    "format": "file-path",
                    "description": "The location of the amplicons for the assay"
                },
                "amplicons_bed": {
                    "type": "string",
                    "format": "file-path",
                    "description": "The location of the amplicons for the assay"
                },
                "variant_db": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Variant db in VCF format (required)"
                },
                "genbank": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Genbank file for organism of interest (required)"
                },
                "ntc_threshold": {
                    "type": "string",
                    "description": "Comma separated string of x,y - where x is the read count threshold and y is the number of amplicons i.e. 20,3 - fail is more than 20 reads in more than 3 amplicons",
                    "default": "20,3"
                },
                "sample_threshold": {
                    "type": "string",
                    "description": "Comma separated string of x,y - where x is the read count threshold and y is the number of amplicons i.e. 20,8 - fail is less than 20 reads in less than 8 amplicons",
                    "default": "-20,8"
                },
                "positive_threshold": {
                    "type": "string",
                    "description": "Comma separated string of x,y - where x is the read count threshold and y is the number of amplicons i.e. 20,2 - fail is less than 20 reads in less than 2 amplicons",
                    "default": "-20,2"
                },
                "realign": {
                    "type": "boolean",
                    "description": "{erform indel realignment",
                    "hidden": true,
                    "default": false
                },
                "strand_bias": {
                    "type": "integer",
                    "description": "Set a threshold for strand bias filtering. Strand bias is represented as a phred scaled p-value from a fishers exact test, closer to 0 is good",
                    "default": 1000
                },
                "reference": {
                    "type": "string",
                    "format": "file-path",
                    "description": "NCBI accession for reference genome"
                },
                "report_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Report config file."
                }
            },
            "required": [
                "fastq"
            ]
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ],
    "properties": {
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "_reference": {
            "type": "string",
            "hidden": true
        },
        "_variant_db": {
            "type": "string",
            "hidden": true
        },
        "_genbank": {
            "type": "string",
            "hidden": true
        },
        "_amplicons_bed": {
            "type": "string",
            "hidden": true
        },
        "_report_config": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v1.0.8",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\n`wf-tb-amr` is a workflow for determining the antibiotic resistance of\nMycobacterium tuberculosis samples. The workflow handles multiplexed sequencing\nruns and provides clear and simple reports summarising the predicted resistance\nprofile of each sample according to genetic variants discovered.\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n"
    }
}